/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelorder(TreeNode* r)
    {

        vector<vector<int>>store;
        vector<int>v;
    queue<TreeNode* >q;
        q.push(r);
    q.push(NULL);
    while(q.front()!=NULL)
    {
    while(q.front()!=NULL)
    {

        TreeNode  *value= q.front();
        v.push_back(value->val);
        q.pop();
        if(value->left!=NULL)
            q.push(value->left);
        if(value->right!=NULL)
            q.push(value->right);
    
        
    }
     q.pop();
        q.push(NULL);
        store.push_back(v);
        v.clear();
        
    }
    
    return store;
    }
    
    
    
    
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        
        
        vector<vector<int>>store= levelorder(root);
        reverse(store.begin(),store.end());
        return store;
        
    }
};